Урок от Python Russian

Логирование - это фиксация состояния вашего приложения в определенный момент времени.
Оно позволяет понимать,
что система работает как ожидается (и вообще работает),
а также облегчает диагностику проблем

Минусы print:
- нет общего формата (дата)
- не ясно какой модуль в каком месте написал информацию, насколько она важна
- нужно выключать/включать, обязательно забудем удалить
- нельзя гибко настроить куда писать (файл/консоль)

Когда уместен print: в очень простых, маленьких приложениях и скриптах.
Чем больше и сложнее приложение
тем важнее использовать специальные инструменты логирования


DIWEC = DEBUG - INFO - WARNING - ERROR - CRITICAL

DEBUG - самая подробная информация, нужна только разработчику
и только для отладки, например значения переменных, какие данные получены и т.д.
INFO - информационные сообщения, как подтверждение работы, например запуск сервиса
WARNING - еще не ошибка, но уже надо посмотреть - мало места на диске,
мало памяти, много созданных объектов и т.д
ERROR - приложение еще работает и может работать, но что-то пошло не так
CRITICAL - приложение не может работать дальше

logger = getLogger(__name__) - принятый подход для логирования с именем модуля
логеры с именами наследуют настройки от root, но могут быть настроены иначе
logger.debug("Get expression %s", exp)  - для обратной совместимости
используется старый формат через %